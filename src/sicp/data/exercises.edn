{:exercises
 [{:id "1"
   :name "1.2"
   :title "Exercise 1.2"
   :description "Translate the following expression into prefix 
    form: (5 + 4 + (2 − (3 − (6 + 4/5)))) / 3(6 − 2)(2 − 7)"}
  {:id "2"
   :name "1.3"
   :title "Exercise 1.3"
   :description "Define a procedure that takes three numbers
    as arguments and returns the sum of the squares of the two
    larger numbers."}
  {:id "3"
   :name "1.8"
   :title "Exercise 1.8"
   :description "Newton’s method for cube roots is based on
    the fact that if y is an approximation to the cube root of x,
    then a better approximation is given by the value
    x/y 2 + 2y.3
    Use this formula to implement a cube-root procedure analogous 
    to the square-root procedure. (In Section 1.3.4 we will
    see how to implement Newton’s method in general as an
    abstraction of these square-root and cube-root procedures.)"}
  {:id "4"
   :name "1.11"
   :title "Exercise 1.11"
   :description "A function f is defined by the rule that
    f(n) if n < 3,
    f (n − 1) + 2f (n − 2) + 3f (n − 3) if n ≥ 3.
    Write a procedure that computes f by means of a recursive
    process. Write a procedure that computes f by means of an
    iterative process."}]}